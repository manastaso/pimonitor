package org.pimonitor;

import akka.actor.AbstractActorWithTimers;
import akka.actor.ActorRef;
import akka.event.Logging;
import akka.event.LoggingAdapter;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import okhttp3.*;

import java.io.IOException;
import java.time.Duration;

public class WeatherActor extends AbstractActorWithTimers {

    private static ActorRef ui;
    private static Object TICK_KEY = "TickKey";
    private final LoggingAdapter log = Logging.getLogger(getContext().getSystem(), this);
    private final OkHttpClient client;
    private final Gson gson;
    private JsonObject jsonObject;

    public WeatherActor(ActorRef ui) {
        getJSONObject();
        
        getSelf().tell("tick", getSelf());
        getTimers().startTimerAtFixedRate(TICK_KEY, "tick", Duration.ofMillis(5000));
        WeatherActor.ui = ui;
        client = new OkHttpClient();
        gson = new Gson();
    }

    private void getJSONObject() {
        String json = "{\"latitude\":53.56,\"longitude\":10.0,\"generationtime_ms\":0.47898292541503906,\"utc_offset_seconds\":7200,\"timezone\":\"Europe/Berlin\",\"timezone_abbreviation\":\"CEST\",\"elevation\":3.0,\"current_weather_units\":{\"time\":\"unixtime\",\"interval\":\"seconds\",\"temperature\":\"°C\",\"windspeed\":\"km/h\",\"winddirection\":\"°\",\"is_day\":\"\",\"weathercode\":\"wmo code\"},\"current_weather\":{\"time\":1697140800,\"interval\":900,\"temperature\":11.6,\"windspeed\":5.0,\"winddirection\":120,\"is_day\":0,\"weathercode\":3},\"hourly_units\":{\"time\":\"unixtime\",\"temperature_2m\":\"°C\",\"relativehumidity_2m\":\"%\",\"rain\":\"mm\",\"precipitation_probability\":\"%\",\"windspeed_10m\":\"km/h\",\"windgusts_10m\":\"km/h\"},\"hourly\":{\"time\":[1697061600,1697065200,1697068800,1697072400,1697076000,1697079600,1697083200,1697086800,1697090400,1697094000,1697097600,1697101200,1697104800,1697108400,1697112000,1697115600,1697119200,1697122800,1697126400,1697130000,1697133600,1697137200,1697140800,1697144400,1697148000,1697151600,1697155200,1697158800,1697162400,1697166000,1697169600,1697173200,1697176800,1697180400,1697184000,1697187600,1697191200,1697194800,1697198400,1697202000,1697205600,1697209200,1697212800,1697216400,1697220000,1697223600,1697227200,1697230800,1697234400,1697238000,1697241600,1697245200,1697248800,1697252400,1697256000,1697259600,1697263200,1697266800,1697270400,1697274000,1697277600,1697281200,1697284800,1697288400,1697292000,1697295600,1697299200,1697302800,1697306400,1697310000,1697313600,1697317200,1697320800,1697324400,1697328000,1697331600,1697335200,1697338800,1697342400,1697346000,1697349600,1697353200,1697356800,1697360400,1697364000,1697367600,1697371200,1697374800,1697378400,1697382000,1697385600,1697389200,1697392800,1697396400,1697400000,1697403600,1697407200,1697410800,1697414400,1697418000,1697421600,1697425200,1697428800,1697432400,1697436000,1697439600,1697443200,1697446800,1697450400,1697454000,1697457600,1697461200,1697464800,1697468400,1697472000,1697475600,1697479200,1697482800,1697486400,1697490000,1697493600,1697497200,1697500800,1697504400,1697508000,1697511600,1697515200,1697518800,1697522400,1697526000,1697529600,1697533200,1697536800,1697540400,1697544000,1697547600,1697551200,1697554800,1697558400,1697562000,1697565600,1697569200,1697572800,1697576400,1697580000,1697583600,1697587200,1697590800,1697594400,1697598000,1697601600,1697605200,1697608800,1697612400,1697616000,1697619600,1697623200,1697626800,1697630400,1697634000,1697637600,1697641200,1697644800,1697648400,1697652000,1697655600,1697659200,1697662800],\"temperature_2m\":[15.4,15.1,14.0,13.4,13.0,12.6,12.6,12.3,12.3,12.3,12.7,13.7,14.4,15.3,15.5,15.7,15.9,15.7,15.1,14.6,12.7,12.5,11.7,11.9,11.8,12.0,12.1,12.3,12.5,12.9,13.6,14.4,15.1,15.7,15.9,16.1,16.8,17.4,18.7,19.8,20.6,20.3,19.5,18.4,18.3,17.9,17.7,17.5,17.3,17.1,16.8,15.0,13.6,12.3,12.2,11.9,11.7,11.6,12.2,12.9,13.9,13.6,13.2,13.8,13.7,12.4,11.2,10.3,9.6,9.2,8.9,8.7,8.6,8.4,8.3,8.1,8.0,7.7,7.5,7.5,7.3,7.3,7.5,8.0,8.5,9.2,9.3,9.7,9.4,9.3,8.9,8.5,8.2,8.0,7.7,7.6,7.4,7.4,7.3,7.2,7.2,7.1,7.0,6.8,6.9,7.4,8.1,8.9,9.6,10.3,10.9,11.2,11.4,11.4,11.0,10.3,9.7,9.1,8.5,7.9,7.5,7.2,7.0,6.7,6.5,6.4,6.1,5.9,6.1,7.0,8.2,9.4,10.5,11.6,12.3,12.8,13.0,12.8,12.2,11.4,10.7,10.4,10.3,10.2,10.2,10.2,10.1,10.1,10.1,9.9,9.4,8.7,8.4,8.8,9.5,10.1,10.2,10.2,10.1,9.9,9.7,9.3,8.5,7.5,6.7,6.0,5.5,5.0],\"relativehumidity_2m\":[88,89,88,82,87,92,89,89,94,92,88,76,72,62,59,58,55,54,60,63,80,78,84,88,88,89,91,94,96,97,98,97,95,92,91,91,91,90,84,76,72,71,74,80,79,83,82,82,83,84,83,84,85,83,87,91,88,82,77,72,65,60,62,53,46,58,67,71,73,74,75,78,78,80,81,83,84,84,86,85,84,84,81,77,73,67,68,64,71,71,77,80,82,82,81,81,83,86,88,89,90,90,90,91,90,88,86,83,79,74,70,65,60,59,63,71,77,80,82,84,85,86,87,87,86,86,89,93,95,94,91,88,84,79,76,71,68,68,71,76,81,84,88,90,92,93,94,94,93,93,93,94,93,89,84,79,74,68,64,62,61,61,63,67,70,73,75,78],\"rain\":[7.80,0.40,0.90,0.60,0.80,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.20,0.70,1.50,1.70,1.10,0.00,0.00,0.00,0.10,0.20,1.00,0.20,0.20,0.10,0.00,0.00,0.00,0.00,2.80,2.20,2.70,0.60,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.60,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.00,0.00,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.10,0.10,0.10,0.10,0.10,0.10,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],\"precipitation_probability\":[100,100,100,90,81,71,47,24,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,3,3,3,16,29,42,39,35,32,49,67,84,84,84,84,61,39,16,25,33,42,54,65,77,78,80,81,82,83,84,66,47,29,37,44,52,64,75,87,85,83,81,66,50,35,33,31,29,31,33,35,43,50,58,66,73,81,80,78,77,83,88,94,87,81,74,67,59,52,53,54,55,50,44,39,39,39,39,36,32,29,27,25,23,26,29,32,32,32,32,21,11,0,1,2,3,4,5,6,5,4,3,4,5,6,5,4,3,6,10,13,18,24,29,20,12,3,3,3,3,3,3,3,2,1,0,0,0,0,0,0,0,1,2,3,4,5,6,4,2,0,0,0,0],\"windspeed_10m\":[16.7,15.7,13.2,12.3,7.6,9.0,10.8,10.0,10.7,11.3,11.2,9.9,9.4,12.0,11.4,11.5,9.4,9.0,7.1,3.9,3.6,1.9,5.0,4.9,4.4,7.4,9.8,8.7,9.6,9.5,9.8,9.4,11.0,14.2,15.2,16.9,19.6,19.4,22.1,24.1,23.9,24.2,26.0,29.8,27.3,25.4,27.9,25.5,24.7,23.9,23.0,16.4,17.6,13.8,9.4,12.4,13.1,12.8,13.9,16.9,20.7,23.6,26.4,24.5,25.2,23.8,22.7,21.2,23.0,20.1,19.7,18.7,17.8,17.7,17.2,17.1,16.0,16.2,16.2,16.2,17.4,16.6,16.6,18.2,19.6,19.7,20.8,22.4,23.1,21.4,19.9,18.1,14.4,14.1,14.2,14.3,13.8,12.8,11.7,10.8,10.2,9.4,8.8,8.2,8.1,8.2,8.7,9.0,9.4,10.2,10.8,10.7,10.8,10.6,9.3,7.2,5.7,4.8,4.8,4.4,4.0,4.0,4.0,4.0,4.1,4.1,4.2,4.5,5.0,6.1,8.0,9.2,10.2,11.5,12.7,14.8,14.8,14.5,13.8,12.4,11.7,12.1,12.7,13.0,12.1,10.9,10.1,10.1,10.2,10.0,9.4,9.0,8.0,7.8,10.2,13.4,14.5,14.2,13.8,14.2,14.3,13.7,11.7,8.9,7.2,6.7,7.2,7.3],\"windgusts_10m\":[38.2,32.4,30.2,28.1,23.4,16.9,21.6,20.9,22.0,22.0,22.0,23.0,20.5,24.1,26.3,26.3,24.5,21.2,18.7,13.7,8.6,7.2,9.0,9.4,10.1,14.4,18.4,18.7,18.7,18.4,18.7,18.7,20.9,28.1,31.3,33.5,37.8,38.5,42.5,48.2,47.5,49.0,52.9,72.0,58.3,52.6,56.2,53.6,51.5,48.6,46.1,49.7,38.5,35.3,26.6,24.1,25.6,27.0,26.6,33.5,40.3,52.2,56.2,51.1,56.2,55.1,56.9,46.4,45.7,46.4,46.4,46.1,43.2,42.8,41.8,41.8,39.2,37.8,37.8,37.8,40.0,40.0,39.6,41.8,46.4,47.2,51.5,52.2,58.7,54.7,50.4,45.7,41.0,38.2,35.3,32.4,32.0,31.3,31.0,28.8,26.3,24.1,22.0,19.8,17.6,18.7,19.8,20.9,23.0,24.8,27.0,26.3,25.9,25.2,21.2,17.3,13.3,11.9,10.8,9.4,9.0,8.6,8.3,8.3,8.6,8.6,9.4,9.7,10.4,15.8,21.6,27.0,28.1,29.2,30.2,30.6,31.0,31.7,29.2,26.3,23.8,24.8,25.9,27.0,25.2,23.4,21.6,21.2,20.5,20.2,19.4,19.1,18.4,21.2,24.5,27.4,28.1,28.8,29.5,29.5,29.2,29.2,25.6,22.3,18.7,17.3,15.8,14.4]},\"daily_units\":{\"time\":\"unixtime\",\"uv_index_max\":\"\"},\"daily\":{\"time\":[1697061600,1697148000,1697234400,1697320800,1697407200,1697493600,1697580000],\"uv_index_max\":[2.55,2.30,2.50,2.60,2.30,2.60,2.25]}}";
        jsonObject = new JsonParser().parse(json).getAsJsonObject();
    }

    @Override
    public Receive createReceive() {
        return receiveBuilder().match(
                String.class,
                message -> {
                    ui.tell(getWeatherData(), getSelf());
                })
                .matchAny(o -> log.info("received unknown message"))
                .build();
    }

    private JsonObject getWeatherData() throws IOException {

        HttpUrl.Builder urlBuilder
                = HttpUrl.parse("https://api.open-meteo.com" + "/v1/forecast").newBuilder();
        urlBuilder.addQueryParameter("latitude", "53.551086");
        urlBuilder.addQueryParameter("longitude", "9.993682");
        urlBuilder.addQueryParameter("current_weather", "true");
        urlBuilder.addQueryParameter("hourly", "temperature_2m");
        urlBuilder.addQueryParameter("hourly", "relativehumidity_2m");
        urlBuilder.addQueryParameter("hourly", "rain");
        urlBuilder.addQueryParameter("hourly", "precipitation_probability");
        urlBuilder.addQueryParameter("hourly", "windspeed_10m");
        urlBuilder.addQueryParameter("hourly", ",windgusts_10m");
        urlBuilder.addQueryParameter("daily", "uv_index_max");
        urlBuilder.addQueryParameter("timezone", "Europe/Berlin");
        urlBuilder.addQueryParameter("timeformat", "unixtime");
        urlBuilder.addQueryParameter("windspeed_unit", "kn");

        String url = urlBuilder.build().toString();

        Request request = new Request.Builder()
                .url(url)
                .build();
        Call call = client.newCall(request);
        Response response = call.execute();

        String responseString = response.body().string();
        return gson.fromJson(responseString, JsonObject.class);
    }
}
